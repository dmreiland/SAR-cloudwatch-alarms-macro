{
  "region": "us-east-1",
  "accountId": "374852340823",
  "fragment": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Parameters": {
          "MacroParamTopicArn": {
              "Type": "String",
              "Default": "arn:aws:sns:us-east-1:374852340823:NotifyMe"
          }
      },
      "Outputs": {
          "ServerlessDeploymentBucketName": {
              "Value": {
                  "Ref": "ServerlessDeploymentBucket"
              }
          },
          "HelloLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                  "Ref": "HelloLambdaVersionLdSkCAmmyY9O9HfYLpFxii9ibdv2WJ5tESDzffOCluo"
              }
          },
          "Hellostepfunc1StepFunctionsStateMachineArn": {
              "Description": "Current StateMachine Arn",
              "Value": {
                  "Ref": "Hellostepfunc1StepFunctionsStateMachine"
              }
          },
          "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                  "Fn::Join": [
                      "",
                      [
                          "https://",
                          {
                              "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                              "Ref": "AWS::Region"
                          },
                          ".",
                          {
                              "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                      ]
                  ]
              }
          }
      },
      "Resources": {
          "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                  "BucketEncryption": {
                      "ServerSideEncryptionConfiguration": [
                          {
                              "ServerSideEncryptionByDefault": {
                                  "SSEAlgorithm": "AES256"
                              }
                          }
                      ]
                  }
              }
          },
          "HelloLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                  "LogGroupName": "/aws/lambda/cwalarms-test-dev-hello"
              }
          },
          "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                  "AssumeRolePolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": [
                                      "lambda.amazonaws.com"
                                  ]
                              },
                              "Action": [
                                  "sts:AssumeRole"
                              ]
                          }
                      ]
                  },
                  "Policies": [
                      {
                          "PolicyName": {
                              "Fn::Join": [
                                  "-",
                                  [
                                      "dev",
                                      "cwalarms-test",
                                      "lambda"
                                  ]
                              ]
                          },
                          "PolicyDocument": {
                              "Version": "2012-10-17",
                              "Statement": [
                                  {
                                      "Effect": "Allow",
                                      "Action": [
                                          "logs:CreateLogStream"
                                      ],
                                      "Resource": [
                                          {
                                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cwalarms-test-dev*:*"
                                          }
                                      ]
                                  },
                                  {
                                      "Effect": "Allow",
                                      "Action": [
                                          "logs:PutLogEvents"
                                      ],
                                      "Resource": [
                                          {
                                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cwalarms-test-dev*:*:*"
                                          }
                                      ]
                                  }
                              ]
                          }
                      }
                  ],
                  "Path": "/",
                  "RoleName": {
                      "Fn::Join": [
                          "-",
                          [
                              "cwalarms-test",
                              "dev",
                              {
                                  "Ref": "AWS::Region"
                              },
                              "lambdaRole"
                          ]
                      ]
                  }
              }
          },
          "HelloLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                  "Code": {
                      "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                      },
                      "S3Key": "serverless/cwalarms-test/dev/1564752988019-2019-08-02T13:36:28.019Z/cwalarms-test.zip"
                  },
                  "FunctionName": "cwalarms-test-dev-hello",
                  "Handler": "handler.hello",
                  "MemorySize": 1024,
                  "Role": {
                      "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                      ]
                  },
                  "Runtime": "nodejs10.x",
                  "Timeout": 6
              },
              "DependsOn": [
                  "HelloLogGroup",
                  "IamRoleLambdaExecution"
              ]
          },
          "HelloLambdaVersionLdSkCAmmyY9O9HfYLpFxii9ibdv2WJ5tESDzffOCluo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                  "FunctionName": {
                      "Ref": "HelloLambdaFunction"
                  },
                  "CodeSha256": "2TX8eef9eFzjYdZ7yFGcgrvt0IDyn1B9Yx5cCIJ81zM="
              }
          },
          "IamRoleStateMachineExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                  "AssumeRolePolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": "states.us-east-1.amazonaws.com"
                              },
                              "Action": "sts:AssumeRole"
                          }
                      ]
                  },
                  "Policies": [
                      {
                          "PolicyName": "dev-us-east-1-cwalarms-test-statemachine",
                          "PolicyDocument": {
                              "Version": "2012-10-17",
                              "Statement": [
                                  {
                                      "Effect": "Allow",
                                      "Action": [
                                          "lambda:InvokeFunction"
                                      ],
                                      "Resource": [
                                          {
                                              "Fn::GetAtt": [
                                                  "HelloLambdaFunction",
                                                  "Arn"
                                              ]
                                          }
                                      ]
                                  }
                              ]
                          }
                      }
                  ]
              }
          },
          "Hellostepfunc1StepFunctionsStateMachine": {
              "Type": "AWS::StepFunctions::StateMachine",
              "Properties": {
                  "DefinitionString": {
                      "Fn::Sub": [
                          "{\n  \"StartAt\": \"HelloWorld1\",\n  \"States\": {\n    \"HelloWorld1\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${Ydfe0f4KFu}\",\n      \"End\": true\n    }\n  }\n}",
                          {
                              "Ydfe0f4KFu": {
                                  "Fn::GetAtt": [
                                      "HelloLambdaFunction",
                                      "Arn"
                                  ]
                              }
                          }
                      ]
                  },
                  "RoleArn": {
                      "Fn::GetAtt": [
                          "IamRoleStateMachineExecution",
                          "Arn"
                      ]
                  },
                  "Tags": []
              },
              "DependsOn": [
                  "IamRoleStateMachineExecution"
              ]
          },
          "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                  "Name": "dev-cwalarms-test",
                  "EndpointConfiguration": {
                      "Types": [
                          "EDGE"
                      ]
                  }
              }
          },
          "ApiGatewayResourceUser": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                  "ParentId": {
                      "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                      ]
                  },
                  "PathPart": "user",
                  "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                  }
              }
          },
          "ApiGatewayResourceUserOrders": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                  "ParentId": {
                      "Ref": "ApiGatewayResourceUser"
                  },
                  "PathPart": "orders",
                  "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                  }
              }
          },
          "ApiGatewayMethodGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                  "HttpMethod": "GET",
                  "RequestParameters": {},
                  "ResourceId": {
                      "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                      ]
                  },
                  "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                  },
                  "ApiKeyRequired": false,
                  "AuthorizationType": "NONE",
                  "Integration": {
                      "IntegrationHttpMethod": "POST",
                      "Type": "AWS_PROXY",
                      "Uri": {
                          "Fn::Join": [
                              "",
                              [
                                  "arn:",
                                  {
                                      "Ref": "AWS::Partition"
                                  },
                                  ":apigateway:",
                                  {
                                      "Ref": "AWS::Region"
                                  },
                                  ":lambda:path/2015-03-31/functions/",
                                  {
                                      "Fn::GetAtt": [
                                          "HelloLambdaFunction",
                                          "Arn"
                                      ]
                                  },
                                  "/invocations"
                              ]
                          ]
                      }
                  },
                  "MethodResponses": []
              }
          },
          "ApiGatewayMethodUserOrdersPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                  "HttpMethod": "POST",
                  "RequestParameters": {},
                  "ResourceId": {
                      "Ref": "ApiGatewayResourceUserOrders"
                  },
                  "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                  },
                  "ApiKeyRequired": false,
                  "AuthorizationType": "NONE",
                  "Integration": {
                      "IntegrationHttpMethod": "POST",
                      "Type": "AWS_PROXY",
                      "Uri": {
                          "Fn::Join": [
                              "",
                              [
                                  "arn:",
                                  {
                                      "Ref": "AWS::Partition"
                                  },
                                  ":apigateway:",
                                  {
                                      "Ref": "AWS::Region"
                                  },
                                  ":lambda:path/2015-03-31/functions/",
                                  {
                                      "Fn::GetAtt": [
                                          "HelloLambdaFunction",
                                          "Arn"
                                      ]
                                  },
                                  "/invocations"
                              ]
                          ]
                      }
                  },
                  "MethodResponses": []
              }
          },
          "ApiGatewayDeployment1564752976682": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                  "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                  },
                  "StageName": "dev"
              },
              "DependsOn": [
                  "ApiGatewayMethodGet",
                  "ApiGatewayMethodUserOrdersPost"
              ]
          },
          "HelloLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                  "FunctionName": {
                      "Fn::GetAtt": [
                          "HelloLambdaFunction",
                          "Arn"
                      ]
                  },
                  "Action": "lambda:InvokeFunction",
                  "Principal": "apigateway.amazonaws.com",
                  "SourceArn": {
                      "Fn::Join": [
                          "",
                          [
                              "arn:",
                              {
                                  "Ref": "AWS::Partition"
                              },
                              ":execute-api:",
                              {
                                  "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                  "Ref": "AWS::AccountId"
                              },
                              ":",
                              {
                                  "Ref": "ApiGatewayRestApi"
                              },
                              "/*/*"
                          ]
                      ]
                  }
              }
          },
          "SQS": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                  "FifoQueue": false
              }
          }
      }
  },
  "transformId": "374852340823::AddCloudWatchAlarms",
  "params": {},
  "requestId": "53373d3e-0776-4cd6-b017-7a6fa6d5126e",
  "templateParameterValues": {
      "MacroParamTopicArn": "arn:aws:sns:us-east-1:374852340823:NotifyMe"
  }
}
